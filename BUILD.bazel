package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:defs.bzl", "node_modules_filegroup")

exports_files([
    "tsconfig.json",
    "LICENSE",
])

# Developers should always run `bazel run :install`
# This ensures that package.json in subdirectories get installed as well.
alias(
    name = "install",
    actual = "@nodejs//:yarn",
)

node_modules_filegroup(
    name = "node_modules",
    packages = [
        "ajv",
        "anymatch",
        "arr-diff",
        "arr-flatten",
        "array-unique",
        "async-each",
        "balanced-match",
        "base64-js",
        "binary-extensions",
        "brace-expansion",
        "bytebuffer",
        "chokidar",
        "co",
        "concat-map",
        "core-util-is",
        "domino",
        "expand-brackets",
        "extglob",
        "fast-deep-equal",
        "fast-json-stable-stringify",
        "filename-regex",
        "fill-range",
        "for-in",
        "for-own",
        "fs.realpath",
        "glob",
        "glob-base",
        "glob-parent",
        "graceful-fs",
        "hammerjs",
        "inflight",
        "inherits",
        "is-binary-path",
        "is-buffer",
        "is-dotfile",
        "is-equal-shallow",
        "is-extendable",
        "is-extglob",
        "is-glob",
        "is-posix-bracket",
        "is-primitive",
        "jasmine",
        "jasmine-core",
        "json-schema-traverse",
        "kind-of",
        "long",
        "lru-cache",
        "micromatch",
        "minimatch",
        "minimist",
        "normalize-path",
        "object.omit",
        "once",
        "parse-glob",
        "path-is-absolute",
        "preserve",
        "process-nextick-args",
        "protobufjs",
        "randomatic",
        "readable-stream",
        "readdirp",
        "reflect-metadata",
        "regex-cache",
        "remove-trailing-separator",
        "repeat-element",
        "repeat-string",
        "safe-buffer",
        "set-immediate-shim",
        "shelljs",
        "sigmund",
        "source-map",
        "source-map-support",
        "tsickle",
        "tslib",
        "tsutils",
        "typescript",
        "util-deprecate",
        "wrappy",
        "xhr2",
        "zone.js",
        "@angular-devkit/core",
        "@angular-devkit/schematics",
        "@types",
        "@webcomponents/custom-elements",
    ],
)

filegroup(
    name = "web_test_bootstrap_scripts",
    # do not sort
    srcs = [
        "//:node_modules/reflect-metadata/Reflect.js",
        "//:node_modules/zone.js/dist/zone.js",
        "//:node_modules/zone.js/dist/zone-testing.js",
        "//:node_modules/zone.js/dist/task-tracking.js",
        "//:test-events.js",
    ],
)

filegroup(
    name = "angularjs_scripts",
    srcs = [
        "//:node_modules/angular-1.5/angular.js",
        "//:node_modules/angular-mocks-1.5/angular-mocks.js",
        "//:node_modules/angular-mocks/angular-mocks.js",
        "//:node_modules/angular/angular.js",
    ],
)
